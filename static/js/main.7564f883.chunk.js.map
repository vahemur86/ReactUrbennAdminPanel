{"version":3,"sources":["core/constants/actionTypes.js","state-management/actions/testAction.js","assets/images/logo-white.svg","assets/images/logo-mini.svg","view/shared/Spinner.js","view/AppRoutes.js","view/shared/Navbar.js","view/shared/Sidebar.js","view/shared/SettingsPanel.js","view/shared/Footer.js","view/App.js","serviceWorker.js","core/helpers/errorHandler.js","state-management/middlewares/controllerMiddleware.js","core/constants/headers.js","core/constants/util.js","core/helpers/JSONhelper.js","core/classes/ApiHandler.js","core/constants/urls.js","services/api/testApiHandler/index.js","services/api/urbanAdminApiHandler.js","core/classes/AppController.js","core/helpers/responseErrorChecker.js","configs/controllerFactory.js","controllers/testController/index.js","services/operations/testOeration/index.js","configs/config.js","core/helpers/createAsyncReducer.js","state-management/reducers/testReducer.js","state-management/store/index.js","index.js"],"names":["TEST","CNTRL_GET_TEST","RX_GET_TEST","RX_GET_TEST_PENDING","RX_GET_TEST_DONE","cntrlGetTest","payload","type","rxGetTestPending","rxGetTestDone","module","exports","Spinner","className","Component","Login","lazy","Dashboard","AppRoutes","fallback","path","component","exact","to","Navbar","document","querySelector","classList","toggle","src","require","alt","onClick","body","id","placeholder","aria-label","aria-describedby","Dropdown","alignRight","Toggle","Menu","Item","evt","preventDefault","this","toggleRightSidebar","toggleOffcanvas","Sidebar","state","menuState","setState","Object","keys","length","forEach","i","prevProps","props","location","onRouteChanged","remove","obj","isPathActive","pathname","startsWith","querySelectorAll","el","addEventListener","contains","add","withRouter","SettingsPanel","todos","task","isCompleted","inputValue","statusChangedHandler","bind","addTodo","removeTodo","inputChangeHandler","event","todo","target","checked","unshift","index","splice","value","closeRightSidebar","Tabs","defaultActiveKey","Tab","eventKey","title","onSubmit","onChange","required","map","changed","key","ListItem","htmlFor","children","Footer","href","rel","App","navbarComponent","isFullPageLayout","sidebarComponent","SettingsPanelComponent","footerComponent","console","log","window","scrollTo","fullPageLayoutRoutes","Boolean","hostname","match","ErrorHandler","errorStatus","errorCodesWithErrorMessage","hasOwnProperty","errorCodesEnum","frontErrors","unAuthorized","serverError","400","401","500","errorConstants","status","message","error","handleException","response","Error","HEADERS","Accept","ContentType","Authorization","ApplicationJson","formData","Urlencoded","TimeZoneKey","TimeZone","Date","getTimezoneOffset","toString","BEARER","JSONHelper","data","JSON","stringify","err","parse","alert","API_METHODS","ApiHandler","domain","prefix","token","headers","createHeaders","isFormdata","_domain","_prefix","_token","url","fetch","then","res","errorAndSuccessFilter","method","isFormData","ok","json","responseStatus","errorMessage","statusText","_preifx","API","testApiHandler","_checkResponse","queryFields","Array","isArray","query","queryField","searchQuery","substring","endPoint","_createQuery","Controller","responseErrorCheck","result","testController","testOperations","getTest","store","action","a","async","dispatch","ApiHandlers","configs","TYPES","controllers","createAsyncReducer","initialState","isLoading","testReducer","combineReducers","test","rootReducers","reducers","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","next","Promise","handleAtomicExceptions","controllerMiddleware","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAA,kCAsBO,IAAMA,EAAO,CAClBC,eAAgB,iBAChBC,YAAa,cACbC,oBAAqB,sBACrBC,iBAAkB,qB,gCCzBpB,kHAEaC,EAAe,SAAAC,GAAO,MAAK,CACpCC,KAAOP,IAAKC,eACZK,YAOSE,EAAmB,SAAAF,GAAO,MAAK,CACxCC,KAAOP,IAAKG,oBACZG,YAGSG,EAAgB,SAAAH,GAAO,MAAK,CACrCC,KAAOP,IAAKI,iBACZE,a,4ECnBJI,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,+HCc5BC,G,MAZf,iLAEI,OACE,6BACE,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,gBALzB,GAA6BC,cCEvBC,EAAQC,gBAAK,kBAAM,iCACnBC,EAAYD,gBAAK,kBAAM,uDAoMdE,E,iLA3GX,OACE,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAOC,KAAK,sBAAsBC,UAAYN,IAC9C,kBAAC,IAAD,CAAOO,OAAK,EAACF,KAAK,aAAaC,UAAYJ,IAC3C,kBAAC,IAAD,CAAUM,GAAG,6B,GARDT,a,QCyETU,E,0LA9JXC,SAASC,cAAc,sBAAsBC,UAAUC,OAAO,Y,2CAG9DH,SAASC,cAAc,kBAAkBC,UAAUC,OAAO,U,+BAG1D,OACE,yBAAKf,UAAU,+EACb,yBAAKA,UAAU,qFACb,kBAAC,IAAD,CAAMA,UAAU,+BAA+BU,GAAG,KAAI,yBAAKM,IAAKC,EAAQ,IAAuCjB,UAAU,OAAOkB,IAAI,UACpI,kBAAC,IAAD,CAAMlB,UAAU,+BAA+BU,GAAG,KAAI,yBAAKM,IAAKC,EAAQ,IAAsCC,IAAI,WAEpH,yBAAKlB,UAAU,sEACb,4BAAQA,UAAU,kDAAkDN,KAAK,SAASyB,QAAU,kBAAMP,SAASQ,KAAKN,UAAUC,OAAO,uBAC/H,0BAAMf,UAAU,qBAElB,wBAAIA,UAAU,sBACZ,wBAAIA,UAAU,yCACZ,yBAAKA,UAAU,eACb,yBAAKA,UAAU,mCAAmCqB,GAAG,sBACnD,0BAAMrB,UAAU,mBAAmBqB,GAAG,UACpC,uBAAGrB,UAAU,gBAGjB,2BAAON,KAAK,OAAOM,UAAU,eAAeqB,GAAG,sBAAsBC,YAAY,aAAaC,aAAW,SAASC,mBAAiB,cAIzI,wBAAIxB,UAAU,+BACZ,wBAAIA,UAAU,iBACZ,kBAACyB,EAAA,EAAD,CAAUC,YAAU,GAClB,kBAACD,EAAA,EAASE,OAAV,CAAiB3B,UAAU,4BACzB,uBAAGA,UAAU,cAEf,kBAACyB,EAAA,EAASG,KAAV,CAAe5B,UAAU,gCACvB,uBAAGA,UAAU,aAAb,YACA,kBAACyB,EAAA,EAASI,KAAV,CAAe7B,UAAU,6BAA6BmB,QAAS,SAAAW,GAAG,OAAGA,EAAIC,mBACvE,yBAAK/B,UAAU,qBACb,yBAAKgB,IAAI,oCAAoCE,IAAI,OAAOlB,UAAU,iBAEpE,yBAAKA,UAAU,oFACb,wBAAIA,UAAU,oDAAd,cACA,uBAAGA,UAAU,kBAAb,8BAKJ,kBAACyB,EAAA,EAASI,KAAV,CAAe7B,UAAU,6BAA6BmB,QAAS,SAAAW,GAAG,OAAGA,EAAIC,mBACvE,yBAAK/B,UAAU,qBACb,yBAAKgB,IAAI,oCAAoCE,IAAI,OAAOlB,UAAU,iBAEpE,yBAAKA,UAAU,oFACb,wBAAIA,UAAU,oDAAd,YACA,uBAAGA,UAAU,kBAAb,wBAKJ,kBAACyB,EAAA,EAASI,KAAV,CAAe7B,UAAU,6BAA6BmB,QAAS,SAAAW,GAAG,OAAGA,EAAIC,mBACvE,yBAAK/B,UAAU,qBACb,yBAAKgB,IAAI,oCAAoCE,IAAI,OAAOlB,UAAU,iBAEpE,yBAAKA,UAAU,oFACb,wBAAIA,UAAU,oDAAd,WACA,uBAAGA,UAAU,kBAAb,+BAQV,wBAAIA,UAAU,YACZ,kBAACyB,EAAA,EAAD,CAAUC,YAAU,GAClB,kBAACD,EAAA,EAASE,OAAV,CAAiB3B,UAAU,4BACzB,uBAAGA,UAAU,YACb,0BAAMA,UAAU,WAElB,kBAACyB,EAAA,EAASG,KAAV,CAAe5B,UAAU,8CACvB,uBAAGA,UAAU,aAAb,iBACA,kBAACyB,EAAA,EAASI,KAAV,CAAe7B,UAAU,6BAA6BmB,QAAS,SAAAW,GAAG,OAAGA,EAAIC,mBACvE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAU,2BACb,uBAAGA,UAAU,kBAGjB,yBAAKA,UAAU,oFACb,wBAAIA,UAAU,2CAAd,qBACA,uBAAGA,UAAU,2BAAb,cAKJ,kBAACyB,EAAA,EAASI,KAAV,CAAe7B,UAAU,6BAA6BmB,QAAS,SAAAW,GAAG,OAAGA,EAAIC,mBACvE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAU,2BACb,uBAAGA,UAAU,kBAGjB,yBAAKA,UAAU,oFACb,wBAAIA,UAAU,2CAAd,YACA,uBAAGA,UAAU,2BAAb,qBAKJ,kBAACyB,EAAA,EAASI,KAAV,CAAe7B,UAAU,6BAA6BmB,QAAS,SAAAW,GAAG,OAAGA,EAAIC,mBACvE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,cAGjB,yBAAKA,UAAU,oFACb,wBAAIA,UAAU,2CAAd,yBACA,uBAAGA,UAAU,2BAAb,oBAQV,wBAAIA,UAAU,wBACZ,kBAACyB,EAAA,EAAD,CAAUC,YAAU,GAClB,kBAACD,EAAA,EAASE,OAAV,CAAiB3B,UAAU,4BACzB,yBAAKgB,IAAI,oCAAoCE,IAAI,aAEnD,kBAACO,EAAA,EAASG,KAAV,CAAe5B,UAAU,gCACvB,kBAACyB,EAAA,EAASI,KAAV,CAAe7B,UAAU,6BAA6BmB,QAAS,SAAAW,GAAG,OAAGA,EAAIC,mBACvE,yBAAK/B,UAAU,6BACb,uBAAGA,UAAU,6BACb,0BAAMA,UAAU,QAAhB,cAGJ,kBAACyB,EAAA,EAASI,KAAV,CAAe7B,UAAU,6BAA6BmB,QAAS,SAAAW,GAAG,OAAGA,EAAIC,mBACvE,yBAAK/B,UAAU,6BACb,uBAAGA,UAAU,8BACb,0BAAMA,UAAU,QAAhB,eAMV,wBAAIA,UAAU,2CACZ,4BAAQN,KAAK,SAASM,UAAU,mCAAmCmB,QAASa,KAAKC,oBAC/E,uBAAGjC,UAAU,eAInB,4BAAQA,UAAU,kEAAkEN,KAAK,SAASyB,QAASa,KAAKE,iBAC9G,0BAAMlC,UAAU,2B,GAxJPC,a,QCAfkC,E,2MAEJC,MAAQ,G,+EAEQC,GAAY,IAAD,OACrBL,KAAKI,MAAMC,GACbL,KAAKM,SAAL,eAAgBD,GAAa,IACc,IAAnCE,OAAOC,KAAKR,KAAKI,OAAOK,OAChCT,KAAKM,SAAL,eAAgBD,GAAa,KAE7BE,OAAOC,KAAKR,KAAKI,OAAOM,SAAQ,SAAAC,GAC9B,EAAKL,SAAL,eAAgBK,GAAI,OAEtBX,KAAKM,SAAL,eAAgBD,GAAa,O,yCAIdO,GACbZ,KAAKa,MAAMC,WAAaF,EAAUE,UACpCd,KAAKe,mB,uCAIS,IAAD,OACfnC,SAASC,cAAc,YAAYC,UAAUkC,OAAO,UACpDT,OAAOC,KAAKR,KAAKI,OAAOM,SAAQ,SAAAC,GAC9B,EAAKL,SAAL,eAAgBK,GAAI,OAGA,CACpB,CAACpC,KAAK,QAAS6B,MAAO,gBACtB,CAAC7B,KAAK,YAAa6B,MAAO,mBAC1B,CAAC7B,KAAK,eAAgB6B,MAAO,sBAC7B,CAAC7B,KAAK,iBAAkB6B,MAAO,wBAC/B,CAAC7B,KAAK,UAAW6B,MAAO,kBACxB,CAAC7B,KAAK,QAAS6B,MAAO,gBACtB,CAAC7B,KAAK,WAAY6B,MAAO,mBACzB,CAAC7B,KAAK,SAAU6B,MAAO,iBACvB,CAAC7B,KAAK,UAAW6B,MAAO,kBACxB,CAAC7B,KAAK,cAAe6B,MAAO,qBAC5B,CAAC7B,KAAK,eAAgB6B,MAAO,sBAC7B,CAAC7B,KAAK,iBAAkB6B,MAAO,wBAC/B,CAAC7B,KAAK,aAAc6B,MAAO,2BAGfM,SAAS,SAAAO,GACjB,EAAKC,aAAaD,EAAI1C,OACxB,EAAK+B,SAAL,eAAgBW,EAAIb,OAAS,S,+BAOjC,OACE,yBAAKpC,UAAU,4BAA4BqB,GAAG,WAC5C,wBAAIrB,UAAU,OACZ,wBAAIA,UAAYgC,KAAKkB,aAAa,cAAgB,kBAAoB,YACpE,kBAAC,IAAD,CAAMlD,UAAU,WAAWU,GAAG,cAC5B,uBAAGV,UAAU,sBACb,0BAAMA,UAAU,cAAhB,mB,mCA8OCO,GACX,OAAOyB,KAAKa,MAAMC,SAASK,SAASC,WAAW7C,K,0CAI/CyB,KAAKe,iBAEL,IAAM3B,EAAOR,SAASC,cAAc,QACpCD,SAASyC,iBAAiB,sBAAsBX,SAAQ,SAACY,GAEvDA,EAAGC,iBAAiB,aAAa,WAC5BnC,EAAKN,UAAU0C,SAAS,sBACzBF,EAAGxC,UAAU2C,IAAI,iBAGrBH,EAAGC,iBAAiB,YAAY,WAC3BnC,EAAKN,UAAU0C,SAAS,sBACzBF,EAAGxC,UAAUkC,OAAO,wB,GA3TR/C,aAmUPyD,cAAWvB,G,wCCpUbwB,EAAb,YAEE,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KACDT,MAAQ,CACTwB,MAAO,CACH,CACIvC,GAAI,EACJwC,KAAM,iBACNC,aAAa,GAEjB,CACIzC,GAAI,EACJwC,KAAM,iCACNC,aAAa,GAEjB,CACIzC,GAAI,EACJwC,KAAM,iDACNC,aAAa,GAEjB,CACIzC,GAAI,EACJwC,KAAM,2BACNC,aAAa,GAEjB,CACIzC,GAAI,EACJwC,KAAM,iCACNC,aAAa,IAGrBC,WAAY,IAGhB,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAC5B,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKG,mBAAqB,EAAKA,mBAAmBH,KAAxB,gBApCT,EAFrB,kFAyCqBI,EAAOhD,GACxB,IAAMiD,EAAI,eAAOtC,KAAKI,MAAMwB,MAAMvC,IAClCiD,EAAKR,YAAcO,EAAME,OAAOC,QAEhC,IAAMZ,EAAK,YAAO5B,KAAKI,MAAMwB,OAC7BA,EAAMvC,GAAMiD,EAEZtC,KAAKM,SAAS,CACVsB,MAAOA,MAjDf,8BAqDSS,GACLA,EAAMtC,iBAEN,IAAM6B,EAAK,YAAO5B,KAAKI,MAAMwB,OAC7BA,EAAMa,QAAQ,CACVpD,GAAIuC,EAAMnB,OAASmB,EAAMA,EAAMnB,OAAS,GAAGpB,GAAK,EAAI,EACpDwC,KAAM7B,KAAKI,MAAM2B,WACjBD,aAAa,IAIjB9B,KAAKM,SAAS,CACVsB,MAAOA,EACPG,WAAY,OAlEpB,iCAsEYW,GACR,IAAMd,EAAK,YAAO5B,KAAKI,MAAMwB,OAC7BA,EAAMe,OAAOD,EAAO,GAEpB1C,KAAKM,SAAS,CACVsB,MAAOA,MA3Ef,yCA+EmBS,GACfrC,KAAKM,SAAS,CACVyB,WAAYM,EAAME,OAAOK,UAjFjC,0CAsFEhE,SAASC,cAAc,kBAAkBC,UAAUkC,OAAO,UAtF5D,+BA0FY,IAAD,OACP,OACE,6BAEE,yBAAK3B,GAAG,gBAAgBrB,UAAU,gCAChC,uBAAGA,UAAU,0BAA2BmB,QAASa,KAAK6C,oBACtD,kBAACC,EAAA,EAAD,CAAMC,iBAAiB,WAAW1D,GAAG,4BACnC,kBAAC2D,EAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,aAAalF,UAAU,YACpD,6BACE,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,6BACE,0BAAOA,UAAU,6BAA6BmF,SAAUnD,KAAKkC,SAC3D,2BACExE,KAAK,OACLM,UAAU,sBACVsB,YAAY,YACZsD,MAAO5C,KAAKI,MAAM2B,WAClBqB,SAAUpD,KAAKoC,mBACfiB,UAAQ,IACV,4BAAQ3F,KAAK,SAASM,UAAU,oCAAhC,QAEF,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,aACTgC,KAAKI,MAAMwB,MAAM0B,KAAI,SAAChB,EAAMI,GAC3B,OAAO,kBAAC,EAAD,CACPZ,YAAaQ,EAAKR,YAClByB,QAAS,SAAClB,GAAD,OAAW,EAAKL,qBAAqBK,EAAOK,IACrDc,IAAKlB,EAAKjD,GACV2B,OAAQ,kBAAM,EAAKmB,WAAWO,KAC5BJ,EAAKT,eAQvB,wBAAI7D,UAAU,0CAAd,UACA,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,4CACb,8CAEF,uBAAGA,UAAU,mCAAb,2BACA,uBAAGA,UAAU,kBAAb,yBAEF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,4CACb,6CAEF,uBAAGA,UAAU,mCAAb,sBACA,uBAAGA,UAAU,mBAAb,wBAIN,kBAACgF,EAAA,EAAD,CAAKC,SAAS,QAAQC,MAAM,SAC1B,6BACE,yBAAKlF,UAAU,mEACb,uBAAGA,UAAU,qEAAb,WACA,2BAAOA,UAAU,wFAAjB,YAEF,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,eACZ,yBAAKA,UAAU,WAAU,yBAAKgB,IAAI,oCAAoCE,IAAI,YAAY,0BAAMlB,UAAU,YACtG,yBAAKA,UAAU,QACb,6CACA,yCAEF,2BAAOA,UAAU,sBAAjB,WAEF,wBAAIA,UAAU,QACZ,yBAAKA,UAAU,WAAU,yBAAKgB,IAAI,oCAAoCE,IAAI,YAAY,0BAAMlB,UAAU,aACtG,yBAAKA,UAAU,QACb,yBAAKA,UAAU,kBACb,yCAEF,oCAEF,yBAAKA,UAAU,+CAAf,KACA,2BAAOA,UAAU,sBAAjB,WAEF,wBAAIA,UAAU,QACZ,yBAAKA,UAAU,WAAU,yBAAKgB,IAAI,oCAAoCE,IAAI,YAAY,0BAAMlB,UAAU,YACtG,yBAAKA,UAAU,QACb,6CACA,yCAEF,2BAAOA,UAAU,sBAAjB,WAEF,wBAAIA,UAAU,QACZ,yBAAKA,UAAU,WAAU,yBAAKgB,IAAI,oCAAoCE,IAAI,YAAY,0BAAMlB,UAAU,aACtG,yBAAKA,UAAU,QACb,+CACA,oCAEF,2BAAOA,UAAU,sBAAjB,UAEF,wBAAIA,UAAU,QACZ,yBAAKA,UAAU,WAAU,yBAAKgB,IAAI,oCAAoCE,IAAI,YAAY,0BAAMlB,UAAU,YACtG,yBAAKA,UAAU,QACb,+CACA,yCAEF,2BAAOA,UAAU,sBAAjB,UAEF,wBAAIA,UAAU,QACZ,yBAAKA,UAAU,WAAU,yBAAKgB,IAAI,oCAAoCE,IAAI,YAAY,0BAAMlB,UAAU,YACtG,yBAAKA,UAAU,QACb,2CACA,yCAEF,2BAAOA,UAAU,sBAAjB,qBA5MpB,GAAmCC,aAuN7BwF,EAAW,SAAC5C,GAEhB,OACI,wBAAI7C,UAAY6C,EAAMiB,YAAc,YAAc,MAC9C,yBAAK9D,UAAU,cACX,2BAAO0F,QAAQ,GAAG1F,UAAU,oBACxB,2BAAOA,UAAU,WAAWN,KAAK,WAC7B8E,QAAS3B,EAAMiB,YACfsB,SAAUvC,EAAM0C,UAHxB,IAIY1C,EAAM8C,SAJlB,IAI4B,uBAAG3F,UAAU,mBAG7C,uBAAGA,UAAU,kBAAkBmB,QAAS0B,EAAMG,WAKzCW,IC7NAiC,E,iLAXX,OACE,4BAAQ5F,UAAU,UAChB,yBAAKA,UAAU,+DACb,0BAAMA,UAAU,iEAAhB,uBAAiG,uBAAG6F,KAAK,iCAAiCtB,OAAO,SAASuB,IAAI,uBAA7D,iBAAjG,0BACA,0BAAM9F,UAAU,8DAAhB,4BAAsG,uBAAGA,UAAU,gC,GANxGC,aCOf8F,E,2MACJ3D,MAAQ,G,mFAENJ,KAAKe,mB,+BAGL,IAAIiD,EAAmBhE,KAAKI,MAAM6D,iBAA+B,GAAZ,kBAAC,EAAD,MACjDC,EAAoBlE,KAAKI,MAAM6D,iBAAgC,GAAb,kBAAC,EAAD,MAClDE,EAA0BnE,KAAKI,MAAM6D,iBAAsC,GAAnB,kBAAC,EAAD,MACxDG,EAAmBpE,KAAKI,MAAM6D,iBAA+B,GAAZ,kBAAC,EAAD,MACrD,OACE,yBAAKjG,UAAU,sBACXgG,EACF,yBAAKhG,UAAU,qCACXkG,EACF,yBAAKlG,UAAU,cACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,MACEmG,GAEFC,O,yCAOOxD,GACbZ,KAAKa,MAAMC,WAAaF,EAAUE,UACpCd,KAAKe,mB,uCAKPsD,QAAQC,IAAI,iBACZC,OAAOC,SAAS,EAAG,GAEnB,IADA,IAAMC,EAAuB,CAAC,sBAAuB,sBAAuB,yBAA0B,yBAA0B,yBAA0B,yBAA0B,0BAC1K9D,EAAI,EAAGA,EAAI8D,EAAqBhE,OAAQE,IAAM,CACtD,GAAIX,KAAKa,MAAMC,SAASK,WAAasD,EAAqB9D,GAAI,CAC5DX,KAAKM,SAAS,CACZ2D,kBAAkB,IAEpBrF,SAASC,cAAc,sBAAsBC,UAAU2C,IAAI,qBAC3D,MAEAzB,KAAKM,SAAS,CACZ2D,kBAAkB,IAEpBrF,SAASC,cAAc,sBAAsBC,UAAUkC,OAAO,0B,GAhDpD/C,aAuDHyD,cAAWqC,GCpDNW,QACW,cAA7BH,OAAOzD,SAAS6D,UAEe,UAA7BJ,OAAOzD,SAAS6D,UAEhBJ,OAAOzD,SAAS6D,SAASC,MACvB,2D,oBClBAC,E,8GAmBuBC,GACrB,OAAI9E,KAAK+E,2BAA2BC,eAAeF,GACxC9E,KAAK+E,2BAA2BD,GAEpC,S,KAvBTD,EACKI,eAAiB,CACpBC,YAAa,IACbC,aAAc,IACdC,YAAa,KAJfP,EAOKE,2BAA6B,CAChCM,IAAK,cACLC,IAAK,eACLC,IAAK,gBAVPV,EAaKW,eAAiB,CACpBC,OAAQ,SACRC,QAAS,UACTC,MAAO,SAYAd,QC1BTe,EAAkB,SAAAC,GAEtB,GAAIA,aAAoBC,MAAO,CAC7B,GAAID,EAASb,eAAeH,EAAaW,eAAeE,SACtD,MAAO,CACLC,MAAOE,EAASH,SAGpB,GAAIG,EAASb,eAAeH,EAAaW,eAAeG,OACnDE,EAASF,MAAMX,eAAeH,EAAaW,eAAeE,UAC7D,MAAO,CACLC,MAAOE,EAASF,MAAMD,SAI5B,OAAOG,G,QCJME,EAbC,CACdC,OAAQ,SACRC,YAAa,eACbC,cAAe,gBACfC,gBAAiB,mBAEjBC,SAAW,sBACXC,WAAY,oCACZC,YAAa,WACbC,WAAW,IAAIC,MAAOC,qBAAwB,IAAKC,YCTxCC,EAAS,SCkBPC,E,uGAhBIC,GACf,IACE,OAAOC,KAAKC,UAAUF,GACtB,MAAMG,GACN,MAAM,IAAIlB,MAAMkB,M,4BAGPH,GACX,IACE,OAAOC,KAAKG,MAAMJ,GAClB,MAAMG,GACNE,MAAM,yB,KCVNC,EAEE,OAFFA,EAGC,MAHDA,EAII,SAyHKC,E,WAhHb,WAAYC,EAAQC,GAAmC,IAAD,OAA1BC,EAA0B,uDAAlB,GAAIC,EAAc,uDAAJ,GAAI,yBA0CtDC,cAAgB,SAACC,GAAgB,IAAD,EAC1BF,EAAO,gCACRzB,EAAQC,OAASD,EAAQI,iBADjB,cAERJ,EAAQO,YAAcP,EAAQQ,UAFtB,GAGN,EAAKiB,SAeV,OAbIJ,EAAWG,QACbC,EAAO,2BACJzB,EAAQG,cADJ,UACuBS,EADvB,YACiCS,EAAWG,QAC9CC,IAGFE,IACHF,EAAO,2BACJzB,EAAQE,YAAcF,EAAQI,iBAC5BqB,IAIAA,GA5DPxH,KAAK2H,QAAUN,EACfrH,KAAK4H,QAAUN,EACftH,KAAK6H,OAASN,EACdvH,KAAKwH,QAASA,E,kDAGD,IAAD,OAAVM,EAAU,uDAAJ,GACR,OAAOC,MAAMD,GAGRE,MAAK,SAAAC,GACR,OAAO,EAAKC,sBAAsBD,Q,6BAKhB,IAAD,OAAhBH,EAAgB,uDAAV,GAAI1I,EAAM,uCACnB,OAAO2I,MAAMD,EAAK,CAChBK,OAAQhB,EACRK,QAASxH,KAAKyH,gBACdrI,KAAMwH,EAAWG,UAAU3H,KAC1B4I,MAAK,SAAAC,GAAG,OAAG,EAAKC,sBAAsBD,Q,4BAIP,IAAD,OAA/BH,EAA+B,uDAAzB,GAAI1I,EAAqB,uCAAdgJ,EAAc,uCACjC,OAAOL,MAAMD,EAAK,CAChBK,OAAQhB,EACRK,QAASxH,KAAKyH,cAAcW,GAC5BhJ,KAAMgJ,EAAahJ,EAAQwH,EAAWG,UAAU3H,KAC/C4I,MAAK,SAAAC,GAAG,OAAI,EAAKC,sBAAsBD,Q,+BAGnB,IAAD,OAAjBH,EAAiB,uDAAX,GAAK1I,EAAM,uCACtB,OAAO2I,MAAMD,EAAK,CAChBK,OAAQhB,EACRK,QAASxH,KAAKyH,gBACdrI,KAAOwH,EAAWG,UAAU3H,KAC3B4I,MAAK,SAAAC,GAAG,OAAI,EAAKC,sBAAsBD,Q,4CAyBtBA,GACpB,OAAGA,EAAII,GACEJ,EAAIK,OAEJ,CACL7C,OAAQ,EACR8C,eAAgBN,EAAIxC,OACpB+C,aAAcP,EAAIQ,c,6BAQtB,OAAOzI,KAAK2H,S,aAGH/E,GACT5C,KAAK2H,QAAU/E,I,6BAIf,OAAO5C,KAAK0I,S,aAGH9F,GACT5C,KAAK0I,QAAU9F,I,4BAIf,OAAO5C,KAAK6H,Q,aAGJjF,GACR5C,KAAK6H,OAASjF,I,6BAId,OAAO5C,KAAK4H,S,aAGHhF,GACT5C,KAAK4H,QAAUhF,M,KC1HN+F,EAAG,UADD,oBACC,QCUDC,EADQ,I,kLAHf,OAAO,gE,eCHX,WAAYtB,GAAS,IAAD,8BAChB,4CAAMqB,EAAKrB,KAGfuB,eAAiB,SAAChD,GACd,OAAOA,GALS,E,0EAQPiD,GAET,IAAKA,EACD,MAAO,GAIX,GAA2B,kBAAhBA,GAAmD,kBAAhBA,EAC1C,MAAM,GAAN,OAAUA,GAId,GAAIC,MAAMC,QAAQF,GAAc,CAC5B,IAAIG,EAAQ,IAQZ,OAPAH,EAAYpI,SAAQ,SAACwI,EAAYxG,GAEzBuG,GADAvG,EACK,WAAQwG,EAAW1F,IAAnB,YAA0B0F,EAAWtG,OAErC,UAAOsG,EAAW1F,IAAlB,YAAyB0F,EAAWtG,UAG1CqG,EAIX,GAAI1I,OAAOC,KAAKsI,GAAarI,OAAQ,CAAC,IAAD,aACjC,IAAI0I,EAAc,GADe,WAExB3F,GACDuF,MAAMC,QAAQF,EAAYtF,IAC1BsF,EAAYtF,GAAK9C,SAAQ,SAAAkC,GACrBuG,EAAW,UAAMA,EAAN,YAAqB3F,EAArB,YAA4BZ,MAG3CuG,EAAW,UAAMA,EAAN,YAAqB3F,EAArB,YAA4BsF,EAAYtF,KAN3D,IAAK,IAAIA,KAAOsF,EAAc,EAArBtF,GAST,MAAM,CAAN,aAAW2F,EAAYC,UAAU,KAXA,qCAarC,MAAO,K,4BAG2B,IAAlCC,EAAiC,uDAAtB,GAAIP,EAAkB,uDAAJ,GAC7B,OAAO,qEAAa9I,KAAKqH,OAAlB,YAA4BrH,KAAKsH,OAAjC,YAA2C+B,EAAWA,EAAW,IAAM,IAAvE,OAA4ErJ,KAAKsJ,aAAaR,KAAgBd,KAAKhI,KAAK6I,eAAe5G,KAAKjC,S,2BAGlJqJ,GAA4C,IAAlCjD,EAAiC,uDAAtB,GAAI0C,EAAkB,uDAAJ,GACxC,OAAO,sEAAc9I,KAAKqH,OAAnB,YAA6BrH,KAAKsH,OAAlC,YAA4C+B,EAAWA,EAAW,IAAM,IAAxE,OAA6ErJ,KAAKsJ,aAAaR,IAAgB1C,GAAU4B,KAAKhI,KAAK6I,eAAe5G,KAAKjC,S,0BAG9JqJ,EAAUjD,GAAyC,IAA/B0C,EAA8B,uDAAhB,GAAIV,EAAY,uCAClD,OAAO,qEAAapI,KAAKqH,OAAlB,YAA4BrH,KAAKsH,OAAjC,YAA2C+B,GAA3C,OAAsDrJ,KAAKsJ,aAAaR,IAAgB1C,EAAUgC,GAAYJ,KAAKhI,KAAK6I,eAAe5G,KAAKjC,S,6BAGhJqJ,GAAoC,IAA1BP,EAAyB,uDAAX,GAAK1J,EAAM,uCACtC,OAAO,wEAAgBY,KAAKqH,OAArB,YAA+BrH,KAAKsH,OAApC,YAA8C+B,GAA9C,OAAyDrJ,KAAKsJ,aAAaR,IAAiB1J,GAAM4I,KAAKhI,KAAK6I,eAAe5G,KAAKjC,W,GA/D5GoH,IDOZ,CARV,a,iBEQEmC,EAHb,aAAe,qB,QCCFC,EARY,SAAA3D,GAEzB,OAAGA,EAASb,eAAe,UAClBa,EAAS4D,OAEX5D,GCSH6D,GAAiB,I,YCVrB,WAAYC,GAAiB,IAAD,8BAC1B,+CAIFC,QAAU,SAAOC,EAAQC,GAAf,eAAAC,EAAAC,OAAA,uDACRH,EAAMI,SAAStM,eADP,WAAAoM,EAAA,MAEe,EAAKJ,eAAeC,WAFnC,OAEF/D,EAFE,OAGRgE,EAAMI,SAASrM,YAAciI,IAHrB,sCAHR,EAAK8D,eAAiBA,EAFI,E,2BADDJ,GDWN,CAPD,I,YEHlB,WAAYX,GAAiB,IAAD,8BACxB,+CACKA,eAAiBA,EAFE,E,yKAMD5I,KAAK4I,eAAegB,W,cAArC/D,E,yBACC2D,EAAmB3D,I,2FFJZ,CAA6BqE,I,SGWpCC,GAbK,eAUjBC,KAAWhN,eAAiBiN,GAA2BT,SCe3CU,GA1BY,SAAChD,EAAQiD,GAAT,OAA0B,WAA8D,IAA7DnK,EAA4D,uDAApD,CAAEoK,WAAW,EAAM3D,KAAM0D,GAAgBT,EAAW,uCACxGpM,EAASoM,EAATpM,KACR,OAASA,GACP,IAAI,GAAJ,OAAQ4J,EAAR,YALY,WAOV,MAAO,CAAET,KAAMzG,EAAMyG,KAAM2D,WAAW,EAAM7E,MAAO,MACrD,IAAI,GAAJ,OAAQ2B,EAAR,YAVS,QAYP,OAAO,eACFlH,EADL,CAEEyG,KAAMiD,EAAOrM,SAAW8M,EACxBC,WAAW,EACX7E,MAAO,OAEX,IAAI,GAAJ,OAAQ2B,EAAR,YAjBa,YAkBX,OAAO,eACFlH,EADL,CAEEyG,KAAM,GACN2D,WAAW,EACX7E,MAAOmE,EAAOrM,UAElB,QACE,OAAO2C,KCpBAqK,GAAcC,YAAgB,CACvCC,KAAOL,GAAmBnN,KAAKE,YAAa,MCF1CuN,GAAeF,YAAgB,CACnCC,KAAOE,KAUHC,IALc,kBAAXvG,QACPA,OAAOwG,qCACLxG,OAAOwG,qCAAqC,IACvCC,KAGPC,YhBYmC,SAAAd,GAAO,OAAI,SAAA/J,GAAK,OAAI,SAAA8K,GAAI,OAAI,SAAApB,GAC/D,GAA4D,oBAAzBK,EAAQL,EAAOpM,MAWhD,OAAOwN,EAAKpB,GAVZ,IACE,IAAIL,EAASU,EAAQL,EAAOpM,MAAM0C,EAAO0J,GAIzC,OAHIL,aAAkB0B,UACpB1B,EAASA,EAAOzB,KAAKpC,IAEhB6D,EACP,MAAQzC,IAjBiB,SAAAA,GAC7B3C,QAAQsB,MAAMqB,GAiBVoE,CAAuBpE,OgBrBXqE,CAAqBlB,MAIxBN,GADDyB,YAAYV,GAAcE,ICXxCS,IAASC,OACL,kBAAC,IAAD,CAAU3B,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,EAAD,QAGNjL,SAAS6M,eAAe,SnBkHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5D,MAAK,SAAA6D,GACjCA,EAAaC,kB","file":"static/js/main.7564f883.chunk.js","sourcesContent":["// *APP INIT TYPES\r\n// export const APP_INIT_TYPES = {\r\n//   CNTRL_APP_INIT: 'CNTRL_APP_INIT'\r\n// };\r\n\r\n// // *AUTH TYPES\r\n// export const AUTH_TYPES = {\r\n//   CNTRL_LOG_IN: 'CNTRL_LOG_IN',\r\n//   CNTRL_REFRESH_TOKEN: 'CNTRL_REFRESH_TOKEN',\r\n//   RX_SET_AUTH_BOOL: 'RX_SET_AUTH_BOOL',\r\n//   CNTRL_LOGOUT: 'CNTRL_LOGOUT',\r\n// };\r\n\r\n// *TOKEN todo delete  Token ==============\r\n// export const TOKEN = {\r\n//   // !GET TOKEN PERMISSION\r\n//   CNTRL_GET_TOKEN_PERMISSION: 'CNTRL_GET_TOKEN_PERMISSION',\r\n//   RX_GET_TOKEN_PERMISSION: 'RX_GET_TOKEN_PERMISSION',\r\n//   RX_GET_TOKEN_PERMISSION_PENDING: 'RX_GET_TOKEN_PERMISSION_PENDING',\r\n//   RX_GET_TOKEN_PERMISSION_DONE: 'RX_GET_TOKEN_PERMISSION_DONE'\r\n//\r\n// };\r\nexport const TEST = {\r\n  CNTRL_GET_TEST: 'CNTRL_GET_TEST',\r\n  RX_GET_TEST: 'RX_GET_TEST',\r\n  RX_GET_TEST_PENDING: 'RX_GET_TEST_PENDING',\r\n  RX_GET_TEST_DONE: 'RX_GET_TEST_DONE'\r\n};\r\n","\r\nimport {TEST} from \"../../core/constants/actionTypes\";\r\n\r\nexport const cntrlGetTest = payload => ({\r\n    type : TEST.CNTRL_GET_TEST,\r\n    payload\r\n});\r\n\r\nexport const rxGetTest = payload => ({\r\n    type : TEST.RX_GET_TEST,\r\n    payload\r\n});\r\nexport const rxGetTestPending = payload => ({\r\n    type : TEST.RX_GET_TEST_PENDING,\r\n    payload\r\n});\r\n\r\nexport const rxGetTestDone = payload => ({\r\n    type : TEST.RX_GET_TEST_DONE,\r\n    payload\r\n});","module.exports = __webpack_public_path__ + \"static/media/logo-white.3e9bd86b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-mini.d85f8ee1.svg\";","import React, { Component } from 'react'\n\nexport class Spinner extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"spinner-wrapper\">\n          <div className=\"donut\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Spinner\n","import React, { Component,Suspense, lazy } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Spinner from './shared/Spinner';\nconst Login = lazy(() => import('./user-pages/Login2'));\nconst Dashboard = lazy(() => import('./components/dashboard/Dashboard'));\n// const KanbanBoard = lazy(() => import('./components/apps/KanbanBoard'));\n// const Chats = lazy(() => import('./components/apps/Chats'));\n// const TodoList = lazy( () => import('./components/apps/TodoList'));\n//\n// const Accordions = lazy(() => import('./Ui/basic-ui/Accordions'));\n// const Buttons = lazy(() => import('./Ui/basic-ui/Buttons'));\n// const Badges = lazy(() => import('./Ui/basic-ui/Badges'));\n// const Breadcrumbs = lazy(() => import('./Ui/basic-ui/Breadcrumbs'));\n// const Dropdowns = lazy(() => import('./Ui/basic-ui/Dropdowns'));\n// const Modals = lazy(() => import('./Ui/basic-ui/Modals'));\n// const Progress = lazy(() => import('./Ui/basic-ui/Progress'));\n// const Paginations = lazy(() => import('./Ui/basic-ui/Paginations'));\n// const TabsPage = lazy(() => import('./Ui/basic-ui/TabsPage'));\n// const Typography = lazy(() => import('./Ui/basic-ui/Typography'));\n// const Tooltips = lazy(() => import('./Ui/basic-ui/Tooltips'));\n// const Popups = lazy(() => import('./Ui/basic-ui/Popups'));\n//\n// const Dragula = lazy(() => import('./Ui/advanced-ui/Dragula'));\n// const Clipboard = lazy(() => import('./Ui/advanced-ui/Clipboards'));\n// const ContextMenu = lazy(() => import('./Ui/advanced-ui/ContextMenus'));\n// const Sliders = lazy(() => import('./Ui/advanced-ui/Sliders'));\n// const Carousel = lazy(() => import('./Ui/advanced-ui/Carousel'));\n// const Loaders = lazy(() => import('./Ui/advanced-ui/Loaders'));\n// const TreeView = lazy(() => import('./Ui/advanced-ui/TreeView'));\n//\n// const BasicElements = lazy(() => import('./components/form-elements/BasicElements'));\n// const AdvancedElements = lazy(() => import('./components/form-elements/AdvancedElements'));\n// const Validation = lazy(() => import('./components/form-elements/Validation'));\n// const Wizard = lazy(() => import('./components/form-elements/Wizard'));\n//\n// const BasicTable = lazy(() => import('./components/tables/BasicTable'));\n// const DataTable = lazy(() => import('./components/tables/DataTables'));\n// const ReactTable = lazy(() => import('./components/tables/ReactTable'));\n// const SortableTable = lazy(() => import('./components/tables/SortableTable'));\n//\n// const VectorMap = lazy(() => import('./components/maps/VectorMap'));\n// const SimpleMap = lazy(() => import('./components/maps/SimpleMap'));\n//\n// const Notifications = lazy(() => import('./components/notifications/Notifications'));\n//\n// const Mdi = lazy(() => import('./icons/Mdi'));\n// const FlagIcons = lazy(() => import('./icons/FlagIcons'));\n// const FontAwesome = lazy(() => import('./icons/FontAwesome'));\n// const SimpleLine = lazy(() => import('./icons/SimpleLine'));\n// const Themify = lazy(() => import('./icons/Themify'));\n// const TypIcons = lazy(() => import('./icons/TypIcons'));\n//\n// const TextEditors = lazy(() => import('./components/editors/TextEditors'));\n// const CodeEditor = lazy(() => import('./components/editors/CodeEditor'));\n//\n// const ChartJs = lazy(() => import('./components/charts/ChartJs'));\n// const C3Charts = lazy(() => import('./components/charts/C3Charts'));\n// const Chartist = lazy(() => import('./components/charts/Chartist'));\n// const GoogleCharts = lazy(() => import('./components/charts/GoogleCharts'));\n// const SparkLineCharts = lazy(() => import('./components/charts/SparkLineCharts'));\n// const GuageChart = lazy(() => import('./components/charts/GuageChart'));\n//\n// const Error404 = lazy(() => import('./components/error-pages/Error404'));\n// const Error500 = lazy(() => import('./components/error-pages/Error500'));\n//\n// const Login2 = lazy(() => import('./user-pages/Login2'));\n// const Register1 = lazy(() => import('./user-pages/Register'));\n// const Register2 = lazy(() => import('./user-pages/Register2'));\n// const Lockscreen = lazy(() => import('./user-pages/Lockscreen'));\n//\n// const BlankPage = lazy(() => import('./components/general-pages/BlankPage'));\n// const Profile = lazy(() => import('./components/general-pages/Profile'));\n// const Faq = lazy(() => import('./components/general-pages/Faq'));\n// const Faq2 = lazy(() => import('./components/general-pages/Faq2'));\n// const NewsGrid = lazy(() => import('./components/general-pages/NewsGrid'));\n// const Timeline = lazy(() => import('./components/general-pages/Timeline'));\n// const SearchResults = lazy(() => import('./components/general-pages/SearchResults'));\n// const Portfolio = lazy(() => import('./components/general-pages/Portfolio'));\n//\n// const Invoice = lazy(() => import('./components/ecommerce/Invoice'));\n// const Pricing = lazy(() => import('./components/ecommerce/Pricing'));\n// const ProductCatalogue = lazy(() => import('./components/ecommerce/ProductCatalogue'));\n// const ProjectList = lazy(() => import('./components/ecommerce/ProjectList'));\n//\n// const Email = lazy(() => import('./components/apps/Email'));\n// const Calendar = lazy(() => import('./components/apps/Calendar'));\n// const Gallery = lazy(() => import('./components/apps/Gallery'));\n// const Orders = lazy(() => import('./components/ecommerce/Orders'));\n\n\n// const Widgets = lazy(() => import('./widgets/Widgets'));\nclass AppRoutes extends Component {\n  render () {\n    return (\n      <Suspense fallback={<Spinner/>}>\n        <Switch>\n\n            <Route path=\"/user-pages/login-1\" component={ Login } />\n            <Route exact path=\"/dashboard\" component={ Dashboard } />\n            <Redirect to=\"user-pages/login-1\" />\n       {/*   <Route path=\"/user-pages/login-2\" component={ Login2 } />\n          <Route path=\"/user-pages/register-1\" component={ Register1 } />\n          <Route path=\"/user-pages/register-2\" component={ Register2 } />\n          <Route path=\"/user-pages/lockscreen\" component={ Lockscreen } />*/}\n\n\n\n          {/*<Route exact path=\"/widgets\" component={ Widgets } />*/}\n\n          {/*<Route exact path=\"/apps/kanban-board\" component={ KanbanBoard } />*/}\n          {/*<Route exact path=\"/apps/todo-list\" component={ TodoList } />*/}\n          {/*<Route exact path=\"/apps/chats\" component={ Chats } />*/}\n\n          {/*<Route path=\"/basic-ui/accordions\" component={ Accordions } />*/}\n          {/*<Route path=\"/basic-ui/buttons\" component={ Buttons } />*/}\n          {/*<Route path=\"/basic-ui/badges\" component={ Badges } />*/}\n          {/*<Route path=\"/basic-ui/breadcrumbs\" component={ Breadcrumbs } />*/}\n          {/*<Route path=\"/basic-ui/dropdowns\" component={ Dropdowns } />*/}\n          {/*<Route path=\"/basic-ui/modals\" component={ Modals } />*/}\n          {/*<Route path=\"/basic-ui/progressbar\" component={ Progress } />*/}\n          {/*<Route path=\"/basic-ui/pagination\" component={ Paginations } />*/}\n          {/*<Route path=\"/basic-ui/tabs\" component={ TabsPage } />*/}\n          {/*<Route path=\"/basic-ui/typography\" component={ Typography } />*/}\n          {/*<Route path=\"/basic-ui/tooltips\" component={ Tooltips } />*/}\n          {/*<Route path=\"/basic-ui/popups\" component={ Popups } />*/}\n\n          {/*<Route path=\"/advanced-ui/dragula\" component={ Dragula } />*/}\n          {/*<Route path=\"/advanced-ui/clipboard\" component={ Clipboard } />*/}\n          {/*<Route path=\"/advanced-ui/context-menu\" component={ ContextMenu } />*/}\n          {/*<Route path=\"/advanced-ui/sliders\" component={ Sliders } />*/}\n          {/*<Route path=\"/advanced-ui/carousel\" component={ Carousel } />*/}\n          {/*<Route path=\"/advanced-ui/loaders\" component={ Loaders } />*/}\n          {/*<Route path=\"/advanced-ui/tree-view\" component={ TreeView } />*/}\n\n          {/*<Route path=\"/form-Elements/basic-elements\" component={ BasicElements } />*/}\n          {/*<Route path=\"/form-Elements/advanced-elements\" component={ AdvancedElements } />*/}\n          {/*<Route path=\"/form-Elements/validation\" component={ Validation } />*/}\n          {/*<Route path=\"/form-Elements/wizard\" component={ Wizard } />*/}\n\n          {/*<Route path=\"/tables/basic-table\" component={ BasicTable } />*/}\n          {/*<Route path=\"/tables/data-table\" component={ DataTable } />*/}\n          {/*<Route path=\"/tables/react-table\" component={ ReactTable } />*/}\n          {/*<Route path=\"/tables/sortable-table\" component={ SortableTable } />*/}\n\n          {/*<Route path=\"/maps/vector-map\" component={ VectorMap } />*/}\n          {/*<Route path=\"/maps/simple-map\" component={ SimpleMap } />*/}\n\n          {/*<Route path=\"/notifications\" component={ Notifications } />*/}\n\n          {/*<Route path=\"/icons/mdi\" component={ Mdi } />*/}\n          {/*<Route path=\"/icons/flag-icons\" component={ FlagIcons } />*/}\n          {/*<Route path=\"/icons/font-awesome\" component={ FontAwesome } />*/}\n          {/*<Route path=\"/icons/simple-line\" component={ SimpleLine } />*/}\n          {/*<Route path=\"/icons/themify\" component={ Themify } />*/}\n          {/*<Route path=\"/icons/typicons\" component={ TypIcons } />*/}\n\n          {/*<Route path=\"/editors/text-editors\" component={ TextEditors } />*/}\n          {/*<Route path=\"/editors/code-editor\" component={ CodeEditor } />*/}\n\n          {/*<Route path=\"/icons/themify\" component={ Themify } />*/}\n\n          {/*<Route path=\"/charts/chart-js\" component={ ChartJs } />*/}\n          {/*<Route path=\"/charts/c3-chart\" component={ C3Charts } />*/}\n          {/*<Route path=\"/charts/chartist\" component={ Chartist } />*/}\n          {/*<Route path=\"/charts/google-charts\" component={ GoogleCharts } />*/}\n          {/*<Route path=\"/charts/sparkline-charts\" component={ SparkLineCharts } />*/}\n          {/*<Route path=\"/charts/guage-chart\" component={ GuageChart } />*/}\n\n\n\n          {/*<Route path=\"/error-pages/error-404\" component={ Error404 } />*/}\n          {/*<Route path=\"/error-pages/error-500\" component={ Error500 } />*/}\n\n          {/*<Route path=\"/general-pages/blank-page\" component={ BlankPage } />*/}\n          {/*<Route path=\"/general-pages/profile\" component={ Profile } />*/}\n          {/*<Route path=\"/general-pages/faq-1\" component={ Faq } />*/}\n          {/*<Route path=\"/general-pages/faq-2\" component={ Faq2 } />*/}\n          {/*<Route path=\"/general-pages/news-grid\" component={ NewsGrid } />*/}\n          {/*<Route path=\"/general-pages/timeline\" component={ Timeline } />*/}\n          {/*<Route path=\"/general-pages/search-results\" component={ SearchResults } />*/}\n          {/*<Route path=\"/general-pages/portfolio\" component={ Portfolio } />*/}\n\n          {/*<Route path=\"/ecommerce/invoice\" component={ Invoice } />*/}\n          {/*<Route path=\"/ecommerce/pricing\" component={ Pricing } />*/}\n          {/*<Route path=\"/ecommerce/product-catalogue\" component={ ProductCatalogue } />*/}\n          {/*<Route path=\"/ecommerce/project-list\" component={ ProjectList } />*/}\n          {/*<Route path=\"/ecommerce/orders\" component={ Orders } />*/}\n\n          {/*<Route path=\"/apps/email\" component={ Email } />*/}\n          {/*<Route path=\"/apps/calendar\" component={ Calendar } />*/}\n          {/*<Route path=\"/apps/gallery\" component={ Gallery } />*/}\n\n\n\n        </Switch>\n      </Suspense>\n    );\n  }\n}\n\nexport default AppRoutes;\n","import React, { Component } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\nclass Navbar extends Component {\n  toggleOffcanvas() {\n    document.querySelector('.sidebar-offcanvas').classList.toggle('active');\n  }\n  toggleRightSidebar() {\n    document.querySelector('.right-sidebar').classList.toggle('open');\n  }\n  render () {\n    return (\n      <nav className=\"navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\n        <div className=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-center\">\n          <Link className=\"navbar-brand brand-logo mr-5\" to=\"/\"><img src={require('../../assets/images/logo-white.svg')} className=\"mr-2\" alt=\"logo\" /></Link>\n          <Link className=\"navbar-brand brand-logo-mini\" to=\"/\"><img src={require('../../assets/images/logo-mini.svg')} alt=\"logo\" /></Link>\n        </div>\n        <div className=\"navbar-menu-wrapper d-flex align-items-stretch justify-content-end\">\n          <button className=\"navbar-toggler navbar-toggler align-self-center\" type=\"button\" onClick={ () => document.body.classList.toggle('sidebar-icon-only') }>\n            <span className=\"ti-layout-grid2\"></span>\n          </button>\n          <ul className=\"navbar-nav mr-lg-2\">\n            <li className=\"nav-item nav-search d-none d-lg-block\">\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend hover-cursor\" id=\"navbar-search-icon\">\n                  <span className=\"input-group-text\" id=\"search\">\n                    <i className=\"ti-search\"></i>\n                  </span>\n                </div>\n                <input type=\"text\" className=\"form-control\" id=\"navbar-search-input\" placeholder=\"Search now\" aria-label=\"search\" aria-describedby=\"search\"></input>\n              </div>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav navbar-nav-right\">\n            <li className=\"nav-item mr-1\">\n              <Dropdown alignRight>\n                <Dropdown.Toggle className=\"nav-link count-indicator\">\n                  <i className=\"ti-email\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"preview-list navbar-dropdown\">\n                  <p className=\"p-3 mb-0 \">Messages</p>\n                  <Dropdown.Item className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <img src=\"https://via.placeholder.com/36x36\" alt=\"user\" className=\"profile-pic\"/>\n                    </div>\n                    <div className=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\n                      <h6 className=\"preview-subject ellipsis mb-1 font-weight-normal\">David Grey</h6>\n                      <p className=\"text-gray mb-0\">\n                         The meeting is cancelled\n                      </p>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <img src=\"https://via.placeholder.com/36x36\" alt=\"user\" className=\"profile-pic\"/>\n                    </div>\n                    <div className=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\n                      <h6 className=\"preview-subject ellipsis mb-1 font-weight-normal\">Tim Cook</h6>\n                      <p className=\"text-gray mb-0\">\n                          New product launch\n                      </p>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <img src=\"https://via.placeholder.com/36x36\" alt=\"user\" className=\"profile-pic\"/>\n                    </div>\n                    <div className=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\n                      <h6 className=\"preview-subject ellipsis mb-1 font-weight-normal\">Johnson</h6>\n                      <p className=\"text-gray mb-0\">\n                        Upcoming board meeting \n                      </p>\n                    </div>\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </li>\n            <li className=\"nav-item\">\n              <Dropdown alignRight>\n                <Dropdown.Toggle className=\"nav-link count-indicator\">\n                  <i className=\"ti-bell\"></i>\n                  <span className=\"count\"></span>\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"dropdown-menu navbar-dropdown preview-list\">\n                  <p className=\"p-3 mb-0 \">Notifications</p>\n                  <Dropdown.Item className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <div className=\"preview-icon bg-success\">\n                        <i className=\"ti-info-alt\"></i>\n                      </div>\n                    </div>\n                    <div className=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\n                      <h6 className=\"preview-subject font-weight-normal mb-1\">Application Error</h6>\n                      <p className=\"text-gray ellipsis mb-0\">\n                      Just now\n                      </p>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <div className=\"preview-icon bg-warning\">\n                        <i className=\"ti-settings\"></i>\n                      </div>\n                    </div>\n                    <div className=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\n                      <h6 className=\"preview-subject font-weight-normal mb-1\">Settings</h6>\n                      <p className=\"text-gray ellipsis mb-0\">\n                      Private message\n                      </p>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <div className=\"preview-icon bg-info\">\n                        <i className=\"ti-user\"></i>\n                      </div>\n                    </div>\n                    <div className=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\n                      <h6 className=\"preview-subject font-weight-normal mb-1\">New user registration</h6>\n                      <p className=\"text-gray ellipsis mb-0\">\n                      2 days ago!\n                      </p>\n                    </div>\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </li>\n            <li className=\"nav-item nav-profile\">\n              <Dropdown alignRight>\n                <Dropdown.Toggle className=\"nav-link count-indicator\">\n                  <img src=\"https://via.placeholder.com/40x40\" alt=\"profile\"/>\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"preview-list navbar-dropdown\">\n                  <Dropdown.Item className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"d-flex align-items-center\">\n                      <i className=\"ti-settings text-primary\"></i>\n                      <span className=\"pl-2\">Settings</span>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"d-flex align-items-center\">\n                      <i className=\"ti-power-off text-primary\"></i>\n                      <span className=\"pl-2\">Logout</span>\n                    </div>  \n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </li>\n            <li className=\"nav-item nav-settings d-none d-lg-block\">\n              <button type=\"button\" className=\"nav-link border-0 bg-transparent\" onClick={this.toggleRightSidebar} >\n                <i className=\"ti-more\"></i>\n              </button>\n            </li>\n          </ul>\n          <button className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" onClick={this.toggleOffcanvas}>\n            <span className=\"ti-layout-grid2\"></span>\n          </button>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Collapse } from 'react-bootstrap';\n\n\nclass Sidebar extends Component {\n\n  state = {};\n\n  toggleMenuState(menuState) {\n    if (this.state[menuState]) {\n      this.setState({[menuState] : false});\n    } else if(Object.keys(this.state).length === 0) {\n      this.setState({[menuState] : true});\n    } else {\n      Object.keys(this.state).forEach(i => {\n        this.setState({[i]: false});\n      });\n      this.setState({[menuState] : true});\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged();\n    }\n  }\n\n  onRouteChanged() {\n    document.querySelector('#sidebar').classList.remove('active');\n    Object.keys(this.state).forEach(i => {\n      this.setState({[i]: false});\n    });\n\n    const dropdownPaths = [\n      {path:'/apps', state: 'appsMenuOpen'},\n      {path:'/basic-ui', state: 'basicUiMenuOpen'},\n      {path:'/advanced-ui', state: 'advancedUiMenuOpen'},\n      {path:'/form-elements', state: 'formElementsMenuOpen'},\n      {path:'/tables', state: 'tablesMenuOpen'},\n      {path:'/maps', state: 'mapsMenuOpen'},\n      {path:'/editors', state: 'editorsMenuOpen'},\n      {path:'/icons', state: 'iconsMenuOpen'},\n      {path:'/charts', state: 'chartsMenuOpen'},\n      {path:'/user-pages', state: 'userPagesMenuOpen'},\n      {path:'/error-pages', state: 'errorPagesMenuOpen'},\n      {path:'/general-pages', state: 'generalPagesMenuOpen'},\n      {path:'/ecommerce', state: 'ecommercePagesMenuOpen'},\n    ];\n\n    dropdownPaths.forEach((obj => {\n      if (this.isPathActive(obj.path)) {\n        this.setState({[obj.state] : true})\n      }\n    }));\n \n  }\n\n  render () {\n    return (\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n        <ul className=\"nav\">\n          <li className={ this.isPathActive('/dashboard') ? 'nav-item active' : 'nav-item' }>\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"ti-home menu-icon\"></i>\n              <span className=\"menu-title\">Dashboard</span>\n            </Link>\n          </li>\n         {/* <li className={ this.isPathActive('/widgets') ? 'nav-item active' : 'nav-item' }>\n            <Link className=\"nav-link\" to=\"/widgets\">\n              <i className=\"ti-settings menu-icon\"></i>\n              <span className=\"menu-title\">Widgets</span>\n            </Link>\n          </li>\n          <li className={ this.isPathActive('/apps') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.appsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('appsMenuOpen')} data-toggle=\"collapse\">\n              <i className=\"ti-layout menu-icon\"></i>\n              <span className=\"menu-title\">Apps</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.appsMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/apps/kanban-board') ? 'nav-link active' : 'nav-link' } to=\"/apps/kanban-board\">Kanban Board</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/apps/todo-list') ? 'nav-link active' : 'nav-link' } to=\"/apps/todo-list\">Todo List</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/apps/chats') ? 'nav-link active' : 'nav-link' } to=\"/apps/chats\">Chats</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/apps/email') ? 'nav-link active' : 'nav-link' } to=\"/apps/email\">E-mail</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/apps/calendar') ? 'nav-link active' : 'nav-link' } to=\"/apps/calendar\">Calendar</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/apps/gallery') ? 'nav-link active' : 'nav-link' } to=\"/apps/gallery\">Gallery</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className={ this.isPathActive('/basic-ui') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.basicUiMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('basicUiMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"ti-palette menu-icon\"></i>\n              <span className=\"menu-title\">UI Elements</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.basicUiMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/accordions') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/accordions\">Accordions</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/buttons') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/buttons\">Buttons</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/badges') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/badges\">Badges</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/breadcrumbs') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/breadcrumbs\">Breadcrumbs</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/dropdowns') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/dropdowns\">Dropdowns</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/modals') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/modals\">Modals</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/progressbar') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/progressbar\">Progress bar</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/pagination') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/pagination\">Pagination</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/tabs') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/tabs\">Tabs</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/typography') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/typography\">Typography</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/tooltips') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/tooltips\">Tooltips</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/popups') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/popups\">Popups</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className={ this.isPathActive('/advanced-ui') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.advancedUiMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('advancedUiMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"ti-view-list menu-icon\"></i>\n              <span className=\"menu-title\">Advanced UI</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.advancedUiMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n              <li className=\"nav-item\"> <Link className={ this.isPathActive('/advanced-ui/dragula') ? 'nav-link active' : 'nav-link' } to=\"/advanced-ui/dragula\">Dragula</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/advanced-ui/clipboard') ? 'nav-link active' : 'nav-link' } to=\"/advanced-ui/clipboard\">Clipboard</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/advanced-ui/context-menu') ? 'nav-link active' : 'nav-link' } to=\"/advanced-ui/context-menu\">Context menu</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/advanced-ui/sliders') ? 'nav-link active' : 'nav-link' } to=\"/advanced-ui/sliders\">Sliders</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/advanced-ui/carousel') ? 'nav-link active' : 'nav-link' } to=\"/advanced-ui/carousel\">Carousel</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/advanced-ui/loaders') ? 'nav-link active' : 'nav-link' } to=\"/advanced-ui/loaders\">Loaders</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/advanced-ui/tree-view') ? 'nav-link active' : 'nav-link' } to=\"/advanced-ui/tree-view\">Tree View</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className={ this.isPathActive('/form-elements') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.formElementsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('formElementsMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"ti-clipboard menu-icon\"></i>\n              <span className=\"menu-title\">Form Elements</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.formElementsMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/form-elements/basic-elements') ? 'nav-link active' : 'nav-link' } to=\"/form-elements/basic-elements\">Basic Elements</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/form-elements/advanced-elements') ? 'nav-link active' : 'nav-link' } to=\"/form-elements/advanced-elements\">Advanced Elements</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/form-elements/validation') ? 'nav-link active' : 'nav-link' } to=\"/form-elements/validation\">Validation</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/form-elements/wizard') ? 'nav-link active' : 'nav-link' } to=\"/form-elements/wizard\">Wizard</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className={ this.isPathActive('/editors') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.editorsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('editorsMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"ti-eraser menu-icon\"></i>\n              <span className=\"menu-title\">Editors</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.editorsMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/editors/text-editors') ? 'nav-link active' : 'nav-link' } to=\"/editors/text-editors\">Text Editor</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/editors/code-editor') ? 'nav-link active' : 'nav-link' } to=\"/editors/code-editor\">Code Editor</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className={ this.isPathActive('/charts') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.chartsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('chartsMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"ti-bar-chart-alt menu-icon\"></i>\n              <span className=\"menu-title\">Charts</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.chartsMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/charts/chart-js') ? 'nav-link active' : 'nav-link' } to=\"/charts/chart-js\">Chart Js</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/charts/c3-chart') ? 'nav-link active' : 'nav-link' } to=\"/charts/c3-chart\">C3 Charts</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/charts/chartist') ? 'nav-link active' : 'nav-link' } to=\"/charts/chartist\">Chartist</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/charts/google-charts') ? 'nav-link active' : 'nav-link' } to=\"/charts/google-charts\">Google Charts</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/charts/sparkline-charts') ? 'nav-link active' : 'nav-link' } to=\"/charts/sparkline-charts\">Sparkline Charts</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/charts/guage-chart') ? 'nav-link active' : 'nav-link' } to=\"/charts/guage-chart\">Guage Chart</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className={ this.isPathActive('/tables') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.tablesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('tablesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"ti-layout menu-icon\"></i>\n              <span className=\"menu-title\">Tables</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.tablesMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/tables/basic-table') ? 'nav-link active' : 'nav-link' } to=\"/tables/basic-table\">Basic Table</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/tables/data-table') ? 'nav-link active' : 'nav-link' } to=\"/tables/data-table\">Data Table</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/tables/react-table') ? 'nav-link active' : 'nav-link' } to=\"/tables/react-table\">React Table</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/tables/sortable-table') ? 'nav-link active' : 'nav-link' } to=\"/tables/sortable-table\">Sortable Table</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className={ this.isPathActive('/notifications') ? 'nav-item active' : 'nav-item' }>\n            <Link className=\"nav-link\" to=\"/notifications\">\n              <i className=\"ti-bell menu-icon\"></i>\n              <span className=\"menu-title\">Notifications</span>\n            </Link>\n          </li>\n          <li className={ this.isPathActive('/icons') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.iconsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('iconsMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"ti-face-smile menu-icon\"></i>\n              <span className=\"menu-title\">Icons</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.iconsMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/icons/mdi') ? 'nav-link active' : 'nav-link' } to=\"/icons/mdi\">Material</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/icons/flag-icons') ? 'nav-link active' : 'nav-link' } to=\"/icons/flag-icons\">Flag icons</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/icons/font-awesome') ? 'nav-link active' : 'nav-link' } to=\"/icons/font-awesome\">Font Awesome</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/icons/simple-line') ? 'nav-link active' : 'nav-link' } to=\"/icons/simple-line\">Simple Line Icons</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/icons/themify') ? 'nav-link active' : 'nav-link' } to=\"/icons/themify\">Themify</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/icons/typicons') ? 'nav-link active' : 'nav-link' } to=\"/icons/typicons\">Typicons</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className={ this.isPathActive('/maps') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.mapsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('mapsMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"ti-map menu-icon\"></i>\n              <span className=\"menu-title\">Maps</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.mapsMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/maps/vector-map') ? 'nav-link active' : 'nav-link' } to=\"/maps/vector-map\">Vector Maps</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/maps/simple-map') ? 'nav-link active' : 'nav-link' } to=\"/maps/simple-map\">Simple Maps</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className={ this.isPathActive('/user-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.userPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('userPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"ti-layers-alt menu-icon\"></i>\n              <span className=\"menu-title\">User Pages</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.userPagesMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/user-pages/login-1') ? 'nav-link active' : 'nav-link' } to=\"/user-pages/login-1\">Login</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/user-pages/login-2') ? 'nav-link active' : 'nav-link' } to=\"/user-pages/login-2\">Login 2</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/user-pages/register-1') ? 'nav-link active' : 'nav-link' } to=\"/user-pages/register-1\">Register</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/user-pages/register-2') ? 'nav-link active' : 'nav-link' } to=\"/user-pages/register-2\">Register 2</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/user-pages/lockscreen') ? 'nav-link active' : 'nav-link' } to=\"/user-pages/lockscreen\">Lockscreen</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className={ this.isPathActive('/error-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.errorPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('errorPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"ti-help-alt menu-icon\"></i>\n              <span className=\"menu-title\">Error Pages</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.errorPagesMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/error-pages/error-404') ? 'nav-link active' : 'nav-link' } to=\"/error-pages/error-404\">404</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/error-pages/error-500') ? 'nav-link active' : 'nav-link' } to=\"/error-pages/error-500\">500</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className={ this.isPathActive('/general-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.generalPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('generalPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"ti-layers menu-icon\"></i>\n              <span className=\"menu-title\">General Pages</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.generalPagesMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/general-pages/blank-page') ? 'nav-link active' : 'nav-link' } to=\"/general-pages/blank-page\">Blank Page</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/general-pages/profile') ? 'nav-link active' : 'nav-link' } to=\"/general-pages/profile\">Profile</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/general-pages/faq-1') ? 'nav-link active' : 'nav-link' } to=\"/general-pages/faq-1\">FAQ</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/general-pages/faq-2') ? 'nav-link active' : 'nav-link' } to=\"/general-pages/faq-2\">FAQ 2</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/general-pages/news-grid') ? 'nav-link active' : 'nav-link' } to=\"/general-pages/news-grid\">News Grid</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/general-pages/timeline') ? 'nav-link active' : 'nav-link' } to=\"/general-pages/timeline\">Timeline</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/general-pages/search-results') ? 'nav-link active' : 'nav-link' } to=\"/general-pages/search-results\">Search Results</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/general-pages/portfolio') ? 'nav-link active' : 'nav-link' } to=\"/general-pages/portfolio\">Portfolio</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className={ this.isPathActive('/ecommerce') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.ecommercePagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('ecommercePagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"ti-shopping-cart menu-icon\"></i>\n              <span className=\"menu-title\">E-commerce</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.ecommercePagesMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/ecommerce/invoice') ? 'nav-link active' : 'nav-link' } to=\"/ecommerce/invoice\">Invoice</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/ecommerce/pricing') ? 'nav-link active' : 'nav-link' } to=\"/ecommerce/pricing\">Pricing</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/ecommerce/product-catalogue') ? 'nav-link active' : 'nav-link' } to=\"/ecommerce/product-catalogue\">Product Catalogue</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/ecommerce/project-list') ? 'nav-link active' : 'nav-link' } to=\"/ecommerce/project-list\">Project List</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/ecommerce/orders') ? 'nav-link active' : 'nav-link' } to=\"/ecommerce/orders\">Orders</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"http://bootstrapdash.com/demo/justdo-react-pro/documentation/documentation.html\" rel=\"noopener noreferrer\" target=\"_blank\">\n              <i className=\"ti-write menu-icon\"></i>\n              <span className=\"menu-title\">Documentation</span>\n            </a>\n          </li>*/}\n        </ul>\n      </nav>\n    );\n  }\n\n  isPathActive(path) {\n    return this.props.location.pathname.startsWith(path);\n  }\n\n  componentDidMount() {\n    this.onRouteChanged();\n    // add class 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\n    const body = document.querySelector('body');\n    document.querySelectorAll('.sidebar .nav-item').forEach((el) => {\n      \n      el.addEventListener('mouseover', function() {\n        if(body.classList.contains('sidebar-icon-only')) {\n          el.classList.add('hover-open');\n        }\n      });\n      el.addEventListener('mouseout', function() {\n        if(body.classList.contains('sidebar-icon-only')) {\n          el.classList.remove('hover-open');\n        }\n      });\n    });\n  }\n\n}\n\nexport default withRouter(Sidebar);","import React, { Component } from 'react'\nimport { Tabs, Tab } from 'react-bootstrap';\n\n\nexport class SettingsPanel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n        todos: [\n            {\n                id: 1,\n                task: 'Project review',\n                isCompleted: false\n            },\n            {\n                id: 2,\n                task: 'Schedule meeting for next week',\n                isCompleted: true\n            },\n            {\n                id: 3,\n                task: 'Resolve all the low priority tickets due today',\n                isCompleted: false\n            },\n            {\n                id: 4,\n                task: 'Prepare for presentation',\n                isCompleted: false\n            },\n            {\n                id: 5,\n                task: 'Team review meeting at 3.00 PM',\n                isCompleted: true\n            }\n        ],\n        inputValue: '',\n    }\n\n    this.statusChangedHandler = this.statusChangedHandler.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n}\n\nstatusChangedHandler(event, id) {\n    const todo = {...this.state.todos[id]};\n    todo.isCompleted = event.target.checked;\n\n    const todos = [...this.state.todos];\n    todos[id] = todo;\n\n    this.setState({\n        todos: todos\n    })\n}\n\naddTodo (event) {\n    event.preventDefault();\n\n    const todos = [...this.state.todos];\n    todos.unshift({\n        id: todos.length ? todos[todos.length - 1].id + 1 : 1,\n        task: this.state.inputValue,\n        isCompleted: false\n        \n    })\n\n    this.setState({\n        todos: todos,\n        inputValue: ''\n    })\n}\n\nremoveTodo (index) {\n    const todos = [...this.state.todos];\n    todos.splice(index, 1);\n\n    this.setState({\n        todos: todos\n    })\n}\n\ninputChangeHandler(event) {\n    this.setState({\n        inputValue: event.target.value\n    });\n}\n\ncloseRightSidebar() {\n  document.querySelector('.right-sidebar').classList.remove('open');\n  //alert(\"abc\")\n}\n\n  render() {\n    return (\n      <div>\n        {/* <div id=\"settings-trigger\"><i className=\"ti-settings\"></i></div> */}\n        <div id=\"right-sidebar\" className=\"settings-panel right-sidebar\">\n          <i className=\"settings-close ti-close\"  onClick={this.closeRightSidebar}></i>\n          <Tabs defaultActiveKey=\"TODOLIST\" id=\"uncontrolled-tab-example\">\n            <Tab eventKey=\"TODOLIST\" title=\"TO DO LIST\" className=\"test-tab\">\n              <div>\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"px-3\">\n                      <div>\n                        <form  className=\"add-items d-flex mb-3 mt-0\" onSubmit={this.addTodo}>\n                          <input \n                            type=\"text\" \n                            className=\"form-control h-auto\" \n                            placeholder=\"Add To-do\" \n                            value={this.state.inputValue} \n                            onChange={this.inputChangeHandler}\n                            required />\n                          <button type=\"submit\" className=\"btn btn-primary font-weight-bold\">Add</button>\n                        </form>\n                        <div className=\"list-wrapper\">\n                          <ul className=\"todo-list\">\n                              {this.state.todos.map((todo, index) =>{\n                                return <ListItem \n                                isCompleted={todo.isCompleted}\n                                changed={(event) => this.statusChangedHandler(event, index)}\n                                key={todo.id}\n                                remove={() => this.removeTodo(index) }\n                                >{todo.task}</ListItem>\n                              })}\n                            </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <h4 className=\"px-3 text-muted font-weight-light mb-0\">Events</h4>\n                <div className=\"events py-4 border-bottom px-3\">\n                  <div className=\"wrapper d-flex mb-2\">\n                    <i className=\"ti-arrow-circle-right text-primary mr-2\"></i>\n                    <span>Feb 11 2020</span>\n                  </div>\n                  <p className=\"mb-0 font-weight-thin text-gray\">Creating component page</p>\n                  <p className=\"text-gray mb-0\">build a js based app</p>\n                </div>\n                <div className=\"events pt-4 px-3\">\n                  <div className=\"wrapper d-flex mb-2\">\n                    <i className=\"ti-arrow-circle-right text-primary mr-2\"></i>\n                    <span>Feb 7 2020</span>\n                  </div>\n                  <p className=\"mb-0 font-weight-thin text-gray\">Meeting with Alisa</p>\n                  <p className=\"text-gray mb-0 \">Call Sarah Graves</p>\n                </div>\n              </div>\n            </Tab>\n            <Tab eventKey=\"CHATS\" title=\"CHATS\">\n              <div>\n                <div className=\"d-flex align-items-center justify-content-between border-bottom\">\n                  <p className=\"settings-heading border-top-0 mb-3 pl-3 pt-0 border-bottom-0 pb-0\">FRIENDS</p>\n                  <small className=\"settings-heading border-top-0 mb-3 pt-0 border-bottom-0 pb-0 pr-3 font-weight-normal\">See All</small>\n                </div>\n                <ul className=\"chat-list\">\n                  <li className=\"list active\">\n                    <div className=\"profile\"><img src=\"https://via.placeholder.com/40x40\" alt=\"profile\" /><span className=\"online\"></span></div>\n                    <div className=\"info\">\n                      <p>Thomas Douglas</p>\n                      <p>Available</p>\n                    </div>\n                    <small className=\"text-muted my-auto\">19 min</small>\n                  </li>\n                  <li className=\"list\">\n                    <div className=\"profile\"><img src=\"https://via.placeholder.com/40x40\" alt=\"profile\" /><span className=\"offline\"></span></div>\n                    <div className=\"info\">\n                      <div className=\"wrapper d-flex\">\n                        <p>Catherine</p>\n                      </div>\n                      <p>Away</p>\n                    </div>\n                    <div className=\"badge badge-success badge-pill my-auto mx-2\">4</div>\n                    <small className=\"text-muted my-auto\">23 min</small>\n                  </li>\n                  <li className=\"list\">\n                    <div className=\"profile\"><img src=\"https://via.placeholder.com/40x40\" alt=\"profile\" /><span className=\"online\"></span></div>\n                    <div className=\"info\">\n                      <p>Daniel Russell</p>\n                      <p>Available</p>\n                    </div>\n                    <small className=\"text-muted my-auto\">14 min</small>\n                  </li>\n                  <li className=\"list\">\n                    <div className=\"profile\"><img src=\"https://via.placeholder.com/40x40\" alt=\"profile\" /><span className=\"offline\"></span></div>\n                    <div className=\"info\">\n                      <p>James Richardson</p>\n                      <p>Away</p>\n                    </div>\n                    <small className=\"text-muted my-auto\">2 min</small>\n                  </li>\n                  <li className=\"list\">\n                    <div className=\"profile\"><img src=\"https://via.placeholder.com/40x40\" alt=\"profile\" /><span className=\"online\"></span></div>\n                    <div className=\"info\">\n                      <p>Madeline Kennedy</p>\n                      <p>Available</p>\n                    </div>\n                    <small className=\"text-muted my-auto\">5 min</small>\n                  </li>\n                  <li className=\"list\">\n                    <div className=\"profile\"><img src=\"https://via.placeholder.com/40x40\" alt=\"profile\" /><span className=\"online\"></span></div>\n                    <div className=\"info\">\n                      <p>Sarah Graves</p>\n                      <p>Available</p>\n                    </div>\n                    <small className=\"text-muted my-auto\">47 min</small>\n                  </li>\n                </ul>\n              </div>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n    )\n  }\n}\nconst ListItem = (props) => {\n    \n  return (\n      <li className={(props.isCompleted ? 'completed' : null)}>\n          <div className=\"form-check\">\n              <label htmlFor=\"\" className=\"form-check-label\"> \n                  <input className=\"checkbox\" type=\"checkbox\" \n                      checked={props.isCompleted} \n                      onChange={props.changed} \n                      /> {props.children} <i className=\"input-helper\"></i>\n              </label>\n          </div>\n          <i className=\"remove ti-close\" onClick={props.remove}></i>\n      </li>\n  )\n};\n\nexport default SettingsPanel\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render () {\n    return (\n      <footer className=\"footer\">\n        <div className=\"d-sm-flex justify-content-center justify-content-sm-between\">\n          <span className=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">Copyright © 2020 <a href=\"https://www.bootstrapdash.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Bootstrapdash</a>. All rights reserved.</span>\n          <span className=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i className=\"ti-heart text-danger\"></i></span>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './App.scss';\nimport AppRoutes from './AppRoutes';\nimport Navbar from './shared/Navbar';\nimport Sidebar from './shared/Sidebar';\nimport SettingsPanel from './shared/SettingsPanel';\nimport Footer from './shared/Footer';\n\nclass App extends Component {\n  state = {}\n  componentDidMount() {\n    this.onRouteChanged();\n  }\n  render () {\n    let navbarComponent = !this.state.isFullPageLayout ? <Navbar/> : '';\n    let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar/> : '';\n    let SettingsPanelComponent = !this.state.isFullPageLayout ? <SettingsPanel/> : '';\n    let footerComponent = !this.state.isFullPageLayout ? <Footer/> : '';\n    return (\n      <div className=\"container-scroller\">\n        { navbarComponent }\n        <div className=\"container-fluid page-body-wrapper\">\n          { sidebarComponent }\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <AppRoutes/>\n              { SettingsPanelComponent }\n            </div>\n            { footerComponent }\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged();\n    }\n  }\n\n  onRouteChanged() {\n    console.log(\"ROUTE CHANGED\");\n    window.scrollTo(0, 0);\n    const fullPageLayoutRoutes = ['/user-pages/login-1', '/user-pages/login-2', '/user-pages/register-1', '/user-pages/register-2', '/user-pages/lockscreen', '/error-pages/error-404', '/error-pages/error-500'];\n    for ( let i = 0; i < fullPageLayoutRoutes.length; i++ ) {\n      if (this.props.location.pathname === fullPageLayoutRoutes[i]) {\n        this.setState({\n          isFullPageLayout: true\n        })\n        document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\n        break;\n      } else {\n        this.setState({\n          isFullPageLayout: false\n        })\n        document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\n      }\n    }\n  }\n\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve selectors; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","class ErrorHandler {\r\n    static errorCodesEnum = {\r\n        frontErrors: 400,\r\n        unAuthorized: 401,\r\n        serverError: 500,\r\n    };\r\n\r\n    static errorCodesWithErrorMessage = {\r\n        400: 'front Error',\r\n        401: 'Unauthorized',\r\n        500: 'Server Error',\r\n    };\r\n\r\n    static errorConstants = {\r\n        status: 'status',\r\n        message: 'message',\r\n        error: 'error',\r\n    };\r\n\r\n    static getErrorByStatus (errorStatus) {\r\n        if (this.errorCodesWithErrorMessage.hasOwnProperty(errorStatus)){\r\n            return this.errorCodesWithErrorMessage[errorStatus];\r\n        }\r\n        return null//errorStatus\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorHandler","import ErrorHandler from '../../core/helpers/errorHandler';\r\n\r\nconst handleException = response => {\r\n\r\n  if (response instanceof Error) {\r\n    if (response.hasOwnProperty(ErrorHandler.errorConstants.message)) {\r\n      return {\r\n        error: response.message,\r\n      };\r\n    }\r\n    if (response.hasOwnProperty(ErrorHandler.errorConstants.error\r\n      && response.error.hasOwnProperty(ErrorHandler.errorConstants.message))) {\r\n      return {\r\n        error: response.error.message\r\n      };\r\n    }\r\n  }\r\n  return response;\r\n};\r\n\r\nconst handleAtomicExceptions = err => {\r\n  console.error(err);\r\n};\r\n\r\n/**\r\n * This middleware declares if action for controller or for reducer\r\n * @param configs\r\n */\r\n\r\nexport  const controllerMiddleware = configs => state => next => action => {\r\n  if ([action.tyconfigspe] && typeof configs[action.type] === 'function') {\r\n    try {\r\n      let result = configs[action.type](state, action);\r\n      if (result instanceof Promise) {\r\n        result = result.then(handleException);\r\n      }\r\n      return result;\r\n    } catch ( err ) {\r\n      handleAtomicExceptions(err);\r\n    }\r\n  } else {\r\n    return next(action);\r\n  }\r\n};","const HEADERS = {\r\n  Accept: 'Accept',\r\n  ContentType: 'Content-Type',\r\n  Authorization: 'Authorization',\r\n  ApplicationJson: 'application/json',\r\n  // ApplicationJson: 'application/json',\r\n  formData : 'multipart/form-data',\r\n  Urlencoded: 'application/x-www-form-urlencoded',\r\n  TimeZoneKey: 'TimeZone',\r\n  TimeZone: (new Date().getTimezoneOffset() / (-60)).toString(),\r\n};\r\n\r\n\r\nexport default HEADERS;","export const BEARER = 'Bearer';\r\nexport const ACCESS = 'access';","class JSONHelper {\r\n\r\n  static stringify(data) {\r\n    try {\r\n      return JSON.stringify(data);\r\n    } catch(err) {\r\n      throw new Error(err);\r\n    }\r\n  }\r\n  static parse(data) {\r\n    try {\r\n      return JSON.parse(data);\r\n    } catch(err) {\r\n      alert(\"PLEASE TRY LATER\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default JSONHelper;","import HEADERS from '../constants/headers';\r\nimport { BEARER } from '../constants/util';\r\nimport JSONHelper from '../helpers/JSONhelper';\r\nconst API_METHODS = {\r\n  GET: 'GET',\r\n  POST: 'POST',\r\n  PUT: 'PUT',\r\n  DELETE: 'DELETE'\r\n};\r\n\r\nclass ApiHandler {\r\n  // -- Static properties -- //\r\n\r\n  // static token = '';\r\n\r\n  // -- Constructor -- //\r\n  constructor(domain, prefix, token = '', headers = {}) {\r\n    this._domain = domain;\r\n    this._prefix = prefix;\r\n    this._token = token;\r\n    this.headers= headers;\r\n  }\r\n\r\n  get(url = '') {\r\n    return fetch(url, /*{\r\n      // method: API_METHODS.GET,\r\n      // headers: this.createHeaders()\r\n    }*/).then(res => {\r\n      return this.errorAndSuccessFilter(res)\r\n    });\r\n  }\r\n\r\n\r\n  post(url = '', body) {\r\n    return fetch(url, {\r\n      method: API_METHODS.POST,\r\n      headers: this.createHeaders(),\r\n      body: JSONHelper.stringify(body)\r\n    }).then(res =>this.errorAndSuccessFilter(res));\r\n  }\r\n\r\n\r\n  put(url = '', body , isFormData  ) {\r\n    return fetch(url, {\r\n      method: API_METHODS.PUT,\r\n      headers: this.createHeaders(isFormData),\r\n      body: isFormData ? body :  JSONHelper.stringify(body)\r\n    }).then(res => this.errorAndSuccessFilter(res));\r\n  }\r\n\r\n  delete(url = '' , body) {\r\n    return fetch(url, {\r\n      method: API_METHODS.DELETE,\r\n      headers: this.createHeaders(),\r\n      body : JSONHelper.stringify(body)\r\n    }).then(res => this.errorAndSuccessFilter(res));\r\n  }\r\n\r\n  createHeaders = (isFormdata) => {\r\n    let headers = {\r\n      [HEADERS.Accept]: HEADERS.ApplicationJson,\r\n      [HEADERS.TimeZoneKey]: HEADERS.TimeZone,\r\n      ...this.headers,\r\n    };\r\n    if (ApiHandler.token) {\r\n      headers = {\r\n        [HEADERS.Authorization]: `${BEARER} ${ApiHandler.token}`,\r\n        ...headers\r\n      };\r\n    }\r\n    if (!isFormdata) {\r\n      headers = {\r\n        [HEADERS.ContentType]: HEADERS.ApplicationJson,\r\n        ...headers\r\n      };\r\n    }\r\n\r\n    return headers;\r\n  };\r\n\r\n  errorAndSuccessFilter(res) {\r\n    if(res.ok) {\r\n      return res.json()\r\n    } else {\r\n      return {\r\n        status: 0,\r\n        responseStatus: res.status,\r\n        errorMessage: res.statusText,\r\n      }\r\n    }\r\n  }\r\n\r\n  // -- Getters / Setters -- //\r\n\r\n  get domain() {\r\n    return this._domain;\r\n  }\r\n\r\n  set domain(value) {\r\n    this._domain = value;\r\n  }\r\n\r\n  get preifx() {\r\n    return this._preifx;\r\n  }\r\n\r\n  set preifx(value) {\r\n    this._preifx = value;\r\n  }\r\n\r\n  get token() {\r\n    return this._token;\r\n  }\r\n\r\n  set token(value) {\r\n    this._token = value;\r\n  }\r\n\r\n  get prefix() {\r\n    return this._prefix;\r\n  }\r\n\r\n  set prefix(value) {\r\n    this._prefix = value;\r\n  }\r\n\r\n}\r\n\r\nexport default ApiHandler;\r\n","const DOMAIN = 'https://swapi.dev';\r\nexport const API = `${DOMAIN}/api`;\r\n\r\n// if(process.env.REACT_APP_ENV === 'production'){\r\n//     DOMAIN = 'https://swapi.dev/api';\r\n//     // DOMAIN = 'https://production';\r\n//\r\n// }else{\r\n//     DOMAIN = 'https://swapi.dev/api';\r\n//     // DOMAIN = 'https://stageing';\r\n// }\r\n// export const API = `${DOMAIN}/api`;\r\n\r\n\r\n","import UrbanAdminApiHandler from \"../urbanAdminApiHandler\";\r\nconst END_POINT = {\r\n    prefix : 'starships'\r\n};\r\n\r\nclass TestApiHandler extends UrbanAdminApiHandler{\r\n    getTest(){\r\n        return super.get();\r\n    }\r\n}\r\nconst testApiHandler = new TestApiHandler(END_POINT.prefix);\r\nexport default testApiHandler;","import ApiHandler from '../../core/classes/ApiHandler';\r\nimport { API } from '../../core/constants/urls';\r\n\r\nclass UrbanAdminApiHandler extends ApiHandler {\r\n    constructor(prefix) {\r\n        super(API, prefix);\r\n    }\r\n\r\n    _checkResponse = (response) => {\r\n        return response;\r\n    };\r\n\r\n    _createQuery(queryFields) {\r\n        // when queryFields is undefined\r\n        if (!queryFields) {\r\n            return ''\r\n        }\r\n\r\n        // when queryFields is string or number\r\n        if (typeof queryFields === 'string' || typeof queryFields === 'number') {\r\n            return `${queryFields}`;\r\n        }\r\n\r\n        // when queryFields is array\r\n        if (Array.isArray(queryFields)) {\r\n            let query = '?';\r\n            queryFields.forEach((queryField, index) => {\r\n                if (index) {\r\n                    query += `&${queryField.key}=${queryField.value}`\r\n                } else {\r\n                    query += `${queryField.key}=${queryField.value}`\r\n                }\r\n            });\r\n            return query;\r\n        }\r\n\r\n        //when queryFields is object\r\n        if (Object.keys(queryFields).length) {\r\n            let searchQuery = '';\r\n            for (let key in queryFields) {\r\n                if (Array.isArray(queryFields[key])) {\r\n                    queryFields[key].forEach(value => {\r\n                        searchQuery = `${searchQuery}&${key}=${value}`\r\n                    })\r\n                } else {\r\n                    searchQuery = `${searchQuery}&${key}=${queryFields[key]}`\r\n                }\r\n            }\r\n            return `?${searchQuery.substring(1)}`;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    get(endPoint = '', queryFields = '') {\r\n        return super.get(`${this.domain}/${this.prefix}/${endPoint ? endPoint + '/' : ''}${this._createQuery(queryFields)}`).then(this._checkResponse.bind(this));\r\n    }\r\n\r\n    post(endPoint, formData = {}, queryFields = '') {\r\n        return super.post(`${this.domain}/${this.prefix}/${endPoint ? endPoint + '/' : ''}${this._createQuery(queryFields)}`, formData).then(this._checkResponse.bind(this));\r\n    }\r\n\r\n    put(endPoint, formData, queryFields = '', isFormData) {\r\n        return super.put(`${this.domain}/${this.prefix}/${endPoint}${this._createQuery(queryFields)}`, formData, isFormData).then(this._checkResponse.bind(this));\r\n    }\r\n\r\n    delete(endPoint, queryFields = '' , body) {\r\n        return super.delete(`${this.domain}/${this.prefix}/${endPoint}${this._createQuery(queryFields)}` , body).then(this._checkResponse.bind(this));\r\n    }\r\n}\r\n\r\nexport default UrbanAdminApiHandler;\r\n","/**\r\n * @name Controller\r\n * @desc this is an abstraction of operation services\r\n */\r\n\r\nclass Controller {\r\n\r\n  constructor() {}\r\n}\r\n\r\nexport default Controller;","const responseErrorCheck = response => {\r\n\r\n  if(response.hasOwnProperty('result')){\r\n    return response.result\r\n  }\r\n  return response;\r\n};\r\n\r\nexport default responseErrorCheck;","import * as ApiHandlers from '../services/api';\r\nimport * as Controllers from '../controllers';\r\nimport * as Operations from '../services/operations';\r\n\r\n\r\n\r\n//operations\r\nconst testOperation = new Operations.TestOperation(ApiHandlers.testApiHandler);\r\n\r\n\r\n//controllers\r\n// const appController = new Controllers.AppController();\r\n// const tokenController = new Controllers.TokenController(tokenOperation);\r\n// const usersController = new Controllers.UserController(usersOperation);\r\nconst testController = new Controllers.TestController(testOperation);\r\n\r\nexport {\r\n  // appController,\r\n  // tokenController,\r\n  // usersController,\r\n  testController\r\n};","import Controller from \"../../core/classes/AppController\";\r\nimport {rxGetTestDone, rxGetTestPending} from \"../../state-management/actions/testAction\";\r\n\r\nclass TestController extends Controller {\r\n  constructor(testOperations) {\r\n    super();\r\n    this.testOperations = testOperations;\r\n  }\r\n\r\n  getTest = async (store , action) => {\r\n    store.dispatch(rxGetTestPending());\r\n    const response = await this.testOperations.getTest();\r\n    store.dispatch(rxGetTestDone(response));\r\n  }\r\n}\r\n\r\nexport default TestController;","import Operations from \"../../../core/classes/AppOperation\";\r\nimport responseErrorCheck from \"../../../core/helpers/responseErrorChecker\";\r\n\r\nclass TestOperation extends Operations{\r\n    constructor(testApiHandler) {\r\n        super();\r\n        this.testApiHandler = testApiHandler;\r\n    }\r\n\r\n    async getTest(){\r\n        const response = await this.testApiHandler.getTest();\r\n        return responseErrorCheck(response);\r\n    }\r\n}\r\n\r\nexport default TestOperation;","import * as controllers from './controllerFactory';\r\nimport * as TYPES from '../core/constants/actionTypes';\r\n\r\n\r\n\r\nexport const configs = {\r\n  //init\r\n  // [TYPES.APP_INIT_TYPES.CNTRL_APP_INIT] : controllers.appController.init ,\r\n  // [TYPES.AUTH_TYPES.CNTRL_LOGOUT] : controllers.tokenController.logOut,\r\n  //\r\n  // //auth types\r\n  // [TYPES.AUTH_TYPES.CNTRL_LOG_IN] : controllers.tokenController.authenticate,\r\n  // [TYPES.AUTH_TYPES.CNTRL_REFRESH_TOKEN] : controllers.tokenController.refreshToken,\r\n\r\n  //testController\r\n  [TYPES.TEST.CNTRL_GET_TEST]: controllers.testController.getTest\r\n};\r\n\r\nexport default configs ;\r\n","const DONE = 'DONE';\r\nconst REJECTED = 'REJECTED';\r\nconst PENDING = 'PENDING';\r\n\r\nconst createAsyncReducer = (prefix, initialState) => (state = { isLoading: true, data: initialState }, action) => {\r\n  const { type } = action;\r\n  switch ( type ) {\r\n    case `${prefix}_${PENDING}`:\r\n\r\n      return { data: state.data, isLoading: true, error: null, };\r\n    case `${prefix}_${DONE}`:\r\n\r\n      return {\r\n        ...state,\r\n        data: action.payload || initialState,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n    case `${prefix}_${REJECTED}`:\r\n      return {\r\n        ...state,\r\n        data: {},\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default createAsyncReducer;","import {combineReducers} from \"redux\";\r\nimport createAsyncReducer from \"../../core/helpers/createAsyncReducer\";\r\nimport createReducer from '../../core/helpers/createReducer';\r\nimport {TEST} from \"../../core/constants/actionTypes\";\r\n\r\n\r\nexport const testReducer = combineReducers({\r\n    test : createAsyncReducer(TEST.RX_GET_TEST, {})\r\n});","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport {controllerMiddleware} from '../middlewares/controllerMiddleware';\r\nimport configs from '../../configs/config';\r\nimport * as reducers from '../reducers';\r\n\r\nconst rootReducers = combineReducers({\r\n  test : reducers.testReducer,\r\n\r\n});\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(controllerMiddleware(configs))\r\n);\r\n\r\nconst store = createStore(rootReducers, enhancer);\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './view/App';\nimport * as serviceWorker from './serviceWorker';\n// import {composeWithDevTools} from 'redux-devtools';\nimport {Provider} from 'react-redux';\nimport store from './state-management/store/index';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}